import{bB as v,bC as _,gG as m,gH as f,dh as T,bW as y,gI as s,r as g,bd as x,bG as c,bH as p,P as u,g as O,t as C,e as o,d as l,cS as S,n as H}from"./vendor.2e4165c5.js";import{l as N}from"./I3SMeshView3D.a5314459.js";import"./I3SAttributeOverrides.ee63fee6.js";import"./I3SNode.700eae0a.js";import"./I3SUtil.9f4ec561.js";import"./I3SBinaryReader.9365fecb.js";import"./SceneModification.60f9e211.js";import"./persistable.d8cbe814.js";import"./multiOriginJSONSupportUtils.b9381dd0.js";import"./Graphics3DScaleVisibility.55e09d18.js";import"./optimizedFeatureQueryEngineAdapter.5665a3fd.js";import"./centroid.9c410442.js";import"./PooledRBush.3c86b7b0.js";import"./quickselect.02d2bace.js";import"./SceneLayerWorker.2fc0c6ad.js";import"./attributeUtils.987422a2.js";const b=.2;let r=class extends N(v(_)){constructor(){super(...arguments),this.type="integrated-mesh-3d",this.lodFactor=1,this._elevationContext="im",this._isIntegratedMesh=!0,this._supportsLabeling=!1,this.drapeTargetType=m.WithoutRasterImage,this._overlayTexOffset=f(-1,-1,-1,-1),this._overlayTexScale=T(),this._overlayColor=null,this._overlayHighlight=null,this._overlayNormal=null}get progressiveLoadFactor(){return this.lodFactor>=1?b:1}setDrapingTextures(e){this._clearDrapingTexture(y.INNER),this._clearDrapingTexture(y.OUTER);for(const t of e){const i=t.index,a=t.extent,n=t.needsColorWithoutRasterImage?t.getValidTarget(s.ColorNoRasterImage):t.hasDrapedFeatureSource?t.getValidTarget(s.Color):null;if(g(n)&&x(a)>0){this._overlayTexOffset[2*i]=-a[0]/c(a),this._overlayTexOffset[2*i+1]=-a[1]/p(a),this._overlayTexScale[2*i]=1/c(a),this._overlayTexScale[2*i+1]=1/p(a);const h=t.getValidTarget(s.Highlight),d=t.getValidTarget(s.Water);this._overlayColor=n.getTexture(),this._overlayHighlight=h?h.getTexture():null,this._overlayNormal=d?d.getTexture():null}}this._forAllNodes(t=>g(t)&&this._collection.updateMaterial(t.objectHandle,i=>this._updateMaterialOverlay(i)))}_clearDrapingTexture(e){this._overlayTexOffset[2*e]=-1,this._overlayTexOffset[2*e+1]=-1,this._overlayTexScale[2*e]=0,this._overlayTexScale[2*e+1]=0,this._overlayColor=null,this._overlayHighlight=null,this._overlayNormal=null}_updateMaterialOverlay(e){e.overlayColor=this._overlayColor,e.overlayHighlight=this._overlayHighlight,e.overlayNormal=this._overlayNormal,e.overlayTexOffset=this._overlayTexOffset,e.overlayTexScale=this._overlayTexScale}initialize(){this.updatingHandles.add(()=>this.layer.modifications,()=>this._loadModifications(),u)}_createLayerGraphic(){const e=new O;return e.layer=this.layer,e.sourceLayer=this.layer,e}canResume(){return super.canResume()&&(!this._controller||this._controller.rootNodeVisible)}_loadModifications(){if(this.handles.remove("modifications"),C(this.layer.modifications))return void(this._modifications=[]);const e=this.layer.modifications;this.handles.add(this.updatingHandles.addOnCollectionChange(()=>e,()=>this._modifications=e.toArray(),u),"modifications")}};o([l()],r.prototype,"layer",void 0),o([l({aliasOf:"layer"})],r.prototype,"i3slayer",void 0),o([l(S)],r.prototype,"updatingProgress",void 0),o([l({readOnly:!0,aliasOf:"_controller.updatingProgress"})],r.prototype,"updatingProgressValue",void 0),o([l({readOnly:!0,aliasOf:"view.qualitySettings.sceneService.integratedMesh.lodFactor"})],r.prototype,"lodFactor",void 0),o([l({readOnly:!0})],r.prototype,"progressiveLoadFactor",null),r=o([H("esri.views.3d.layers.SceneLayerView3D")],r);const z=r;export{z as default};
