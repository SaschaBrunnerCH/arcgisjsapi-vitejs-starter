var $=Object.defineProperty,T=Object.defineProperties;var E=Object.getOwnPropertyDescriptors;var x=Object.getOwnPropertySymbols;var M=Object.prototype.hasOwnProperty,L=Object.prototype.propertyIsEnumerable;var S=(e,t,r)=>t in e?$(e,t,{enumerable:!0,configurable:!0,writable:!0,value:r}):e[t]=r,p=(e,t)=>{for(var r in t||(t={}))M.call(t,r)&&S(e,r,t[r]);if(x)for(var r of x(t))L.call(t,r)&&S(e,r,t[r]);return e},m=(e,t)=>T(e,E(t));import{oT as P,ph as J,oU as N,lH as R,lI as j,lJ as F,lK as U,oV as q,oX as A,pf as k,cI as V,B as C,r as K,bs as z,fD as w,gL as v,pT as D,K as O,bx as b,y as H,an as W,lc as _,oY as B,pC as G,e as a,d as n,dl as X,eT as Y,dm as Q,lO as Z,n as ee}from"./vendor.2e4165c5.js";import{S as te,y as re,W as se}from"./SublayersOwner.1d2f0633.js";import{c as ie}from"./ExportImageParameters.b37a1c02.js";import{e as I}from"./sublayerUtils.5f0be494.js";let s=class extends P(J(N(te(re(R(j(F(U(q(A(k(V(C))))))))))))){constructor(...e){super(...e),this.datesInUnknownTimezone=!1,this.dpi=96,this.gdbVersion=null,this.imageFormat="png24",this.imageMaxHeight=2048,this.imageMaxWidth=2048,this.imageTransparency=!0,this.isReference=null,this.labelsVisible=!1,this.operationalLayerType="ArcGISMapServiceLayer",this.sourceJSON=null,this.sublayers=null,this.type="map-image",this.url=null}normalizeCtorArgs(e,t){return typeof e=="string"?p({url:e},t):e}load(e){const t=K(e)?e.signal:null;return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Map Service"]},e).catch(z).then(()=>this._fetchService(t))),Promise.resolve(this)}readImageFormat(e,t){const r=t.supportedImageFormatTypes;return r&&r.indexOf("PNG32")>-1?"png32":"png24"}writeSublayers(e,t,r,i){if(!this.loaded||!e)return;const y=e.slice().reverse().flatten(({sublayers:o})=>o&&o.toArray().reverse()).toArray();let l=!1;if(this.capabilities&&this.capabilities.operations.supportsExportMap&&this.capabilities.exportMap.supportsDynamicLayers){const o=w(i.origin);if(o===v.PORTAL_ITEM){const h=this.createSublayersForOrigin("service").sublayers;l=I(y,h,v.SERVICE)}else if(o>v.PORTAL_ITEM){const h=this.createSublayersForOrigin("portal-item");l=I(y,h.sublayers,w(h.origin))}}const u=[],c=p({writeSublayerStructure:l},i);let d=l;y.forEach(o=>{const h=o.write({},c);u.push(h),d=d||o.originOf("visible")==="user"}),u.some(o=>Object.keys(o).length>1)&&(t.layers=u),d&&(t.visibleLayers=y.filter(o=>o.visible).map(o=>o.id))}createExportImageParameters(e,t,r,i){const y=i&&i.pixelRatio||1;e&&this.version>=10&&(e=e.clone().shiftCentralMeridian());const l=new ie({layer:this,floors:i==null?void 0:i.floors,scale:D({extent:e,width:t})*y}),u=l.toJSON();l.destroy();const c=!i||!i.rotation||this.version<10.3?{}:{rotation:-i.rotation},d=e&&e.spatialReference,o=d.wkid||JSON.stringify(d.toJSON());u.dpi*=y;const h={};if(i!=null&&i.timeExtent){const{start:g,end:f}=i.timeExtent.toJSON();h.time=g&&f&&g===f?""+g:`${g==null?"null":g},${f==null?"null":f}`}else this.timeInfo&&!this.timeInfo.hasLiveData&&(h.time="null,null");return p(p(p({bbox:e&&e.xmin+","+e.ymin+","+e.xmax+","+e.ymax,bboxSR:o,imageSR:o,size:t+","+r},u),c),h)}async fetchImage(e,t,r,i){var y;const l={responseType:"image",signal:(y=i==null?void 0:i.signal)!=null?y:null,query:m(p(p(m(p(p({},this.parsedUrl.query),this.createExportImageParameters(e,t,r,i)),{f:"image"}),this.refreshParameters),this.customParameters),{token:this.apiKey})},u=this.parsedUrl.path+"/export";return l.query.dynamicLayers!=null&&!this.capabilities.exportMap.supportsDynamicLayers?Promise.reject(new O("mapimagelayer:dynamiclayer-not-supported",`service ${this.url} doesn't support dynamic layers, which is required to be able to change the sublayer's order, rendering, labeling or source.`,{query:l.query})):b(u,l).then(c=>c.data).catch(c=>{throw H(c)?c:new O("mapimagelayer:image-fetch-error",`Unable to load image: ${u}`,{error:c})})}async fetchRecomputedExtents(e={}){const t=m(p({},e),{query:m(p({returnUpdates:!0,f:"json"},this.customParameters),{token:this.apiKey})}),{data:r}=await b(this.url,t),{extent:i,fullExtent:y,timeExtent:l}=r,u=i||y;return{fullExtent:u&&W.fromJSON(u),timeExtent:l&&_.fromJSON({start:l[0],end:l[1]})}}loadAll(){return B(this,e=>{e(this.allSublayers)})}serviceSupportsSpatialReference(e){return G(this,e)}async _fetchService(e){if(this.sourceJSON)return void this.read(this.sourceJSON,{origin:"service",url:this.parsedUrl});const{data:t,ssl:r}=await b(this.parsedUrl.path,{query:m(p(p({f:"json"},this.parsedUrl.query),this.customParameters),{token:this.apiKey}),signal:e});r&&(this.url=this.url.replace(/^http:/i,"https:")),this.sourceJSON=t,this.read(t,{origin:"service",url:this.parsedUrl})}};a([n({type:Boolean})],s.prototype,"datesInUnknownTimezone",void 0),a([n()],s.prototype,"dpi",void 0),a([n()],s.prototype,"gdbVersion",void 0),a([n()],s.prototype,"imageFormat",void 0),a([X("imageFormat",["supportedImageFormatTypes"])],s.prototype,"readImageFormat",null),a([n({json:{origins:{service:{read:{source:"maxImageHeight"}}}}})],s.prototype,"imageMaxHeight",void 0),a([n({json:{origins:{service:{read:{source:"maxImageWidth"}}}}})],s.prototype,"imageMaxWidth",void 0),a([n()],s.prototype,"imageTransparency",void 0),a([n({type:Boolean,json:{read:!1,write:{enabled:!0,overridePolicy:()=>({enabled:!1})}}})],s.prototype,"isReference",void 0),a([n({json:{read:!1,write:!1}})],s.prototype,"labelsVisible",void 0),a([n({type:["ArcGISMapServiceLayer"]})],s.prototype,"operationalLayerType",void 0),a([n({json:{read:!1,write:!1}})],s.prototype,"popupEnabled",void 0),a([n()],s.prototype,"sourceJSON",void 0),a([n({json:{write:{ignoreOrigin:!0}}})],s.prototype,"sublayers",void 0),a([Y("sublayers",{layers:{type:[se]},visibleLayers:{type:[Q]}})],s.prototype,"writeSublayers",null),a([n({type:["show","hide","hide-children"]})],s.prototype,"listMode",void 0),a([n({json:{read:!1},readOnly:!0,value:"map-image"})],s.prototype,"type",void 0),a([n(Z)],s.prototype,"url",void 0),s=a([ee("esri.layers.MapImageLayer")],s);const ye=s;export{ye as default};
