import{m7 as g,m8 as N,m9 as S,bz as b,ma as w,mb as P,K as j,by as O,mc as p,md as v,me as x,mf as f,mg as z,mh as h,mi as d,mj as B}from"./vendor.2e4165c5.js";function M(e,t,a,l){return e.name?e.styleName&&e.styleName==="Esri2DPointSymbolsStyle"?F(e,t,l):P(e,t,l).then(r=>E(r,e.name,t,a,l)):Promise.reject(new j("symbolstyleutils:style-symbol-reference-name-missing","Missing name in style symbol reference"))}function E(e,t,a,l,r){const u=e.data,y={portal:a&&a.portal||O.getDefault(),url:b(e.baseUrl),origin:"portal-item"},n=u.items.find(m=>m.name===t);if(!n){const m=`The symbol name '${t}' could not be found`;return Promise.reject(new j("symbolstyleutils:symbol-name-not-found",m,{symbolName:t}))}let o=p(v(n,l),y),i=n.thumbnail&&n.thumbnail.href;const c=n.thumbnail&&n.thumbnail.imageData;x()&&(o=f(o),i=f(i));const U={portal:a.portal,url:b(w(o)),origin:"portal-item"};return g(o,r).then(m=>{const $=l==="cimRef"?N(m.data):m.data,s=S($,U);if(s&&z(s)){if(i){const D=p(i,y);s.thumbnail=new h({url:D})}else c&&(s.thumbnail=new h({url:`data:image/png;base64,${c}`}));e.styleUrl?s.styleOrigin=new d({portal:a.portal,styleUrl:e.styleUrl,name:t}):e.styleName&&(s.styleOrigin=new d({portal:a.portal,styleName:e.styleName,name:t}))}return s})}function F(e,t,a){const l=B.replace(/\{SymbolName\}/gi,e.name);return g(l,a).then(r=>{const u=N(r.data);return S(u,{portal:t.portal,url:b(w(l)),origin:"portal-item"})})}export{E as fetchSymbolFromStyle,M as resolveWebStyleSymbol};
